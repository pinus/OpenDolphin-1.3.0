<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>jp.motomachi-hifuka</groupId>
    <artifactId>open.dolphin.client</artifactId>
    <version>1.3.0.21</version>
    <packaging>jar</packaging>

    <name>client</name>
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <targetdir>${basedir}/target</targetdir>
        <distdir>${basedir}/target/dist</distdir>
        <workdir>${basedir}/target/tmp</workdir><property name="targetdir" value="" />
        <hydraulic.conveyor>/Applications/Conveyor.app/Contents/MacOS/conveyor</hydraulic.conveyor>
        <hydraulic.conveyor.output.dir>${basedir}/output</hydraulic.conveyor.output.dir>

        <!-- versions -->
        <java.version>21</java.version>
        <version.openjfx>21.0.5</version.openjfx>
        <version.jakarta.platform>10.0.0</version.jakarta.platform>
        <version.org.jboss.resteasy>6.2.3.Final</version.org.jboss.resteasy>
        <version.org.hibernate>6.1.5.Final</version.org.hibernate>
        <version.commons-codec>1.15</version.commons-codec>
        <version.org.glassfish.tyrus.bundles>2.1.2</version.org.glassfish.tyrus.bundles>

        <!-- バージョニングに使う日付 -->
        <buildDate>${maven.build.timestamp}</buildDate>
        <!-- バージョニングに使う日付のフォーマット -->
        <timestamp>${maven.build.timestamp}</timestamp>
        <maven.build.timestamp.format>yyyyMMddHHmmss</maven.build.timestamp.format>
    </properties>

    <profiles>
        <profile>
            <id>mac-aarch64</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <jfx.platform>mac-aarch64</jfx.platform>
                <hydraulic.conveyor.machine>mac.aarch64</hydraulic.conveyor.machine>
                <hydraulic.convayor.target>mac-app</hydraulic.convayor.target>
                <java.module.path>${java.home}/jmods</java.module.path>
                <java.jre.dir>${basedir}/appRuntimeImage/jre</java.jre.dir>
                <java.jpackage.resource.dir>${basedir}/resources</java.jpackage.resource.dir>
                <java.jpackage.type>dmg</java.jpackage.type>
            </properties>
        </profile>

        <profile>
            <id>mac-graalvm</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <jfx.platform>mac-aarch64</jfx.platform>
                <hydraulic.conveyor.machine>mac.aarch64</hydraulic.conveyor.machine>
                <hydraulic.convayor.target>mac-app</hydraulic.convayor.target>
                <java.module.path>/Library/Java/JavaVirtualMachines/graalvm-jdk-17/Contents/Home/jmods</java.module.path>
                <java.jre.dir>${basedir}/appRuntimeImage/jre-graal</java.jre.dir>
                <java.jpackage.resource.dir>${basedir}/resources</java.jpackage.resource.dir>
                <java.jpackage.type>dmg</java.jpackage.type>
            </properties>
        </profile>

        <profile>
            <id>mac-amd64</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <jfx.platform>mac</jfx.platform>
                <hydraulic.conveyor.machine>mac.amd64</hydraulic.conveyor.machine>
                <hydraulic.convayor.target>mac-app</hydraulic.convayor.target>
                <java.module.path>${java.home}/jmods</java.module.path>
                <java.jre.dir>${basedir}/appRuntimeImage/jre-x64</java.jre.dir>
                <java.jpackage.resource.dir>${basedir}/resources</java.jpackage.resource.dir>
                <java.jpackage.type>dmg</java.jpackage.type>
            </properties>
        </profile>

        <profile>
            <id>win</id>
            <properties>
                <jfx.platform>win</jfx.platform>
                <hydraulic.conveyor.machine>windows.amd64</hydraulic.conveyor.machine>
                <hydraulic.convayor.target>windows-msix</hydraulic.convayor.target>
                <java.jre.dir>${basedir}/appRuntimeImage/jre</java.jre.dir>
                <java.jpackage.icon>${basedir}/icons/OpenDolphin-ICO.ico</java.jpackage.icon>
                <java.jpackage.resource.dir>${basedir}/resources-win</java.jpackage.resource.dir>
                <java.jpackage.type>msi</java.jpackage.type>
                <maven.build.timestamp.format>MM.dd.yyyy.HHmm</maven.build.timestamp.format>
            </properties>
        </profile>
    </profiles>

    <dependencies>
        <!-- Server -->
        <dependency>
            <groupId>jakarta.platform</groupId>
            <artifactId>jakarta.jakartaee-api</artifactId>
            <version>${version.jakarta.platform}</version>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>open.dolphin.server</artifactId>
            <version>${project.version}</version>
            <classifier>classes</classifier> <!-- this line is manually added -->
        </dependency>

        <!-- Resteasy -->
        <dependency>
            <groupId>org.jboss.resteasy</groupId>
            <artifactId>resteasy-core</artifactId>
            <version>${version.org.jboss.resteasy}</version>
        </dependency>
        <dependency>
            <groupId>org.jboss.resteasy</groupId>
            <artifactId>resteasy-jackson2-provider</artifactId>
            <version>${version.org.jboss.resteasy}</version>
        </dependency>
        <dependency>
            <groupId>org.jboss.resteasy</groupId>
            <artifactId>resteasy-client</artifactId>
            <version>${version.org.jboss.resteasy}</version>
        </dependency>

        <!-- Hibernate -->
        <dependency>
            <groupId>org.hibernate.orm</groupId>
            <artifactId>hibernate-core</artifactId>
            <version>${version.org.hibernate}</version>
        </dependency>

        <!-- WebSocket -->
        <dependency>
            <groupId>org.glassfish.tyrus.bundles</groupId>
            <artifactId>tyrus-standalone-client</artifactId>
            <version>${version.org.glassfish.tyrus.bundles}</version>
        </dependency>

        <!-- Google Calendar -->
        <dependency>
            <groupId>com.google.api-client</groupId>
            <artifactId>google-api-client</artifactId>
            <version>1.30.9</version>
        </dependency>
        <dependency>
            <groupId>com.google.oauth-client</groupId>
            <artifactId>google-oauth-client-jetty</artifactId>
            <version>1.23.0</version>
        </dependency>
        <dependency>
            <groupId>com.google.apis</groupId>
            <artifactId>google-api-services-calendar</artifactId>
            <version>v3-rev305-1.23.0</version>
        </dependency>

        <!-- JavaFX -->
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-graphics</artifactId>
            <version>${version.openjfx}</version>
            <classifier>${jfx.platform}</classifier>
        </dependency>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-controls</artifactId>
            <version>${version.openjfx}</version>
            <classifier>${jfx.platform}</classifier>
        </dependency>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-swing</artifactId>
            <version>${version.openjfx}</version>
            <classifier>${jfx.platform}</classifier>
        </dependency>

        <!-- others -->
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>1.4.14</version>
        </dependency>
        <dependency>
            <groupId>com.j2html</groupId>
            <artifactId>j2html</artifactId>
            <version>1.5.0</version>
        </dependency>
        <dependency>
            <groupId>javax.mail</groupId>
            <artifactId>mail</artifactId>
            <version>1.4.7</version>
        </dependency>
        <dependency>
            <groupId>com.intellij</groupId>
            <artifactId>annotations</artifactId>
            <version>12.0</version>
        </dependency>
        <dependency>
            <groupId>com.formdev</groupId>
            <artifactId>flatlaf</artifactId>
            <version>3.0</version>
        </dependency>
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>2.12.0</version>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.1</version>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                    <compilerArgs>
                        <arg>-XDignore.symbol.file</arg>
                    </compilerArgs>
                    <showDeprecation>true</showDeprecation>
                </configuration>
            </plugin>

            <!-- compose a jar file containing dependent jars -->
            <plugin>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>3.1.1</version>
                <configuration>
                    <descriptorRefs>
                        <descriptorRef>jar-with-dependencies</descriptorRef>
                    </descriptorRefs>
                    <archive>
                        <manifest>
                            <mainClass>open.dolphin.client.Dolphin</mainClass>
                        </manifest>
                    </archive>
                </configuration>
                <executions>
                    <execution>
                        <id>make-assembly</id>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>1.8</version>
                <executions>
                    <!-- make jre antrun:run@jre -->
                    <execution>
                        <id>jre</id>
                        <configuration>
                            <target>
                                <echo>making jre using jlink</echo>
                                <delete dir="${java.jre.dir}" />
                                <exec executable="${java.home}/bin/jlink">
                                    <arg value="--no-header-files" />
                                    <arg value="--no-man-pages" />
                                    <arg value="--strip-debug" />
                                    <arg value="--compress=2" />
                                    <arg line="--module-path ${java.module.path}" />
                                    <arg line="--add-modules java.base,java.desktop,java.datatransfer,java.naming,java.prefs,java.xml,java.management,jdk.unsupported" />
                                    <arg line="--output ${java.jre.dir}" />
                                </exec>
                            </target>
                        </configuration>
                    </execution>

                    <!-- make dist folder antrun:run@dist -->
                    <execution>
                        <id>dist</id>
                        <configuration>
                            <target>
                                <!-- cross-platform packaging not supported -->
                                <echo>making dist folder using jpackage</echo>
                                <delete dir="${workdir}" />
                                <copy tofile="${workdir}/opendolphin.jar">
                                    <fileset file="${targetdir}/open.dolphin.client-1.3.0.17-jar-with-dependencies.jar" />
                                </copy>
                                <copy todir="${workdir}/schema">
                                    <fileset dir="${basedir}/schema"/>
                                </copy>

                                <delete dir="${distdir}" />
                                <exec executable="${java.home}/bin/jpackage">
                                    <arg line="-n OpenDolphin" />
                                    <arg line="--app-version ${buildDate}" />
                                    <arg line="--type ${java.jpackage.type}" />
                                    <arg line="-i ${workdir}/" />
                                    <arg line="-d ${distdir}" />
                                    <arg line="--main-jar opendolphin.jar" />
                                    <arg line="--runtime-image ${java.jre.dir}" />
                                    <arg line="--resource-dir ${java.jpackage.resource.dir}" />?
                                    <arg line="--java-options --add-opens=java.desktop/javax.swing.undo=ALL-UNNAMED" />
                                    <arg line="--java-options -Dopen.dolphin.build.timestamp=${buildDate}" />
                                </exec>
                            </target>
                        </configuration>
                    </execution>

                    <!-- make conveyor antrun:run@conveyor -->
                    <execution>
                        <id>conveyor</id>
                        <configuration>
                            <target>
                                <echo>make app with hydraulic conveyor</echo>
                                <delete dir="${hydraulic.conveyor.output.dir}" />
                                <exec executable="${hydraulic.conveyor}">
                                    <arg line="-KbuildDate=${buildDate}" />
                                    <arg line="-Kapp.machines=${hydraulic.conveyor.machine}" />
                                    <arg line="make ${hydraulic.convayor.target}" />
                                </exec>
                            </target>
                        </configuration>
                    </execution>

                    <execution>
                        <id>tar</id>
                        <configuration>
                            <target>
                                <echo>make tar</echo>
                                <exec executable="tar">
                                    <arg line="czf ${hydraulic.conveyor.output.dir}/OpenDolphin-${buildDate}.tgz" />
                                    <arg line="-C ${hydraulic.conveyor.output.dir}" />
                                    <arg line="OpenDolphin.app" />
                                </exec>
                            </target>
                        </configuration>
                    </execution>

                    <!-- make conveyor site by mvn site -->
                    <execution>
                        <id>conveyor-site</id>
                        <phase>site</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target>
                                <echo>make site with hydraulic conveyor</echo>
                                <delete dir="${hydraulic.conveyor.output.dir}" />
                                <exec executable="${hydraulic.conveyor}">
                                    <arg line="-KbuildDate=${buildDate}" />
                                    <arg line="make copied-site" />
                                </exec>
                            </target>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>